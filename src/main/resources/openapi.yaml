openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
  - url: http://localhost:8080
    description: Generated server url
paths:
  /api/v1/products/{id}:
    get:
      tags:
        - product-controller
      operationId: getProduct
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProductResponseDto'
    put:
      tags:
        - product-controller
      operationId: updateProduct
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductRequestDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProductResponseDto'
    delete:
      tags:
        - product-controller
      operationId: deleteProduct
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
  /api/v1/orders/{id}:
    get:
      tags:
        - order-controller
      operationId: getOrder
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OrderResponseDto'
    put:
      tags:
        - order-controller
      operationId: updateOrder
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderRequestDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OrderResponseDto'
    delete:
      tags:
        - order-controller
      operationId: deleteOrder
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
  /api/v1/order-items/{id}:
    get:
      tags:
        - order-item-controller
      operationId: getOrderItem
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OrderItemResponseDto'
    put:
      tags:
        - order-item-controller
      operationId: updateOrderItem
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderItemRequestDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OrderItemResponseDto'
    delete:
      tags:
        - order-item-controller
      operationId: deleteOrderItem
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
  /api/v1/products:
    get:
      tags:
        - product-controller
      operationId: getAllProducts
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductResponseDto'
    post:
      tags:
        - product-controller
      operationId: createProduct
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductRequestDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProductResponseDto'
  /api/v1/orders:
    get:
      tags:
        - order-controller
      operationId: getOrders
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderResponseDto'
    post:
      tags:
        - order-controller
      operationId: createOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderRequestDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OrderResponseDto'
  /api/v1/order-items:
    get:
      tags:
        - order-item-controller
      operationId: getOrderItems
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderItemResponseDto'
    post:
      tags:
        - order-item-controller
      operationId: createOrderItem
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderItemRequestDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OrderItemResponseDto'
components:
  schemas:
    ProductRequestDto:
      required:
        - code
        - name
        - price
        - stock
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        price:
          type: number
        stock:
          type: integer
          format: int32
    ProductResponseDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        code:
          type: string
        name:
          type: string
        price:
          type: number
        stock:
          type: integer
          format: int32
    OrderItemRequestDto:
      required:
        - orderId
        - price
        - productId
        - quantity
      type: object
      properties:
        quantity:
          type: integer
          format: int32
        price:
          type: number
        orderId:
          type: integer
          format: int64
        productId:
          type: integer
          format: int64
    OrderRequestDto:
      required:
        - clientId
        - userId
      type: object
      properties:
        userId:
          type: integer
          format: int64
        clientId:
          type: integer
          format: int64
        status:
          type: string
          enum:
            - DRAFT
            - COMPLETED
            - CLOSED
            - CANCELED
            - REJECTED
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItemRequestDto'
    OrderItemResponseDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        quantity:
          type: integer
          format: int32
        price:
          type: number
        orderId:
          type: integer
          format: int64
        productId:
          type: integer
          format: int64
    OrderResponseDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItemResponseDto'
        status:
          type: string
          enum:
            - DRAFT
            - COMPLETED
            - CLOSED
            - CANCELED
            - REJECTED
